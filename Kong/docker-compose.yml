version: '3.8'

networks:
  kong-net:
    name: kong-net
    driver: overlay

volumes:
  kong-data:
  konga-data:

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${KONG_PG_USER:-kong}']
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    ports:
      - '5432:5432'
    volumes:
      - kong-data:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:latest
    command: 'kong migrations bootstrap'
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    networks:
      - kong-net
    restart: on-failure

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    depends_on:
      - kong-migration
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
    networks:
      - kong-net
    ports:
      - '8000:8000/tcp'
      - '127.0.0.1:8001:8001/tcp'
      - '8443:8443/tcp'
      - '127.0.0.1:8444:8444/tcp'
    healthcheck:
      test: ['CMD', 'kong', 'health']
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga
    command: '-c prepare -a postgres -u postgresql://${KONG_PG_USER:-kong}:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga_db'
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database
      - kong-migration
      - kong

  # #######################################
  # # Konga: Kong GUI
  # #######################################
  konga:
    image: pantsel/konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: ${KONG_PG_USER:-kong}
      DB_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      TOKEN_SECRET: somerandomstring
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
    networks:
      - kong-net
    ports:
      - '1337:1337'
    restart: always
    volumes:
      - konga-data:/app/kongadata
